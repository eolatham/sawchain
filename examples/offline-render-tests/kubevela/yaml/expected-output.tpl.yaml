apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: ($annotations) # Templated for reuse between test cases
  labels:
    app.oam.dev/appRevision: ""
    app.oam.dev/component: frontend
    app.oam.dev/name: website
    app.oam.dev/namespace: default
    app.oam.dev/resourceType: WORKLOAD
    workload.oam.dev/type: webservice
  name: frontend
  namespace: default
spec:
  selector:
    matchLabels:
      app.oam.dev/component: frontend
  template:
    metadata:
      annotations: ($annotations) # Templated for reuse between test cases
      labels:
        app.oam.dev/component: frontend
        app.oam.dev/name: website
    spec:
      containers:
        - image: oamdev/testapp:v1
          name: frontend
          ports:
            - containerPort: ($port) # Templated for reuse between test cases
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.oam.dev/component: frontend
    app.oam.dev/name: website
    app.oam.dev/namespace: default
    app.oam.dev/resourceType: TRAIT
    trait.oam.dev/resource: service
    trait.oam.dev/type: gateway
  name: frontend
  namespace: default
spec:
  ports:
    - name: (join('-', ['port', to_string($port)])) # Templated for reuse between test cases
      port: ($port) # Templated for reuse between test cases
      targetPort: ($port) # Templated for reuse between test cases
  selector:
    app.oam.dev/component: frontend
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  labels:
    app.oam.dev/component: frontend
    app.oam.dev/name: website
    app.oam.dev/namespace: default
    app.oam.dev/resourceType: TRAIT
    trait.oam.dev/resource: ingress
    trait.oam.dev/type: gateway
  name: frontend
  namespace: default
spec:
  rules:
    - host: localhost
      http:
        paths:
          - backend:
              serviceName: frontend
              servicePort: ($port) # Templated for reuse between test cases
            path: /
            pathType: ImplementationSpecific
